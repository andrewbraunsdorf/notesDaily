char BYTE1;
unsigned char BYTE2;

BYTE1 a;
BYTE2 b;
For variable a, only 7 bits are available and its range is (-127 to 127) = (+/-)2^7 -1. For variable b all 8 bits are available and the range is 0 to 255 (2^8 -1).
If you use char as character, "unsigned" is completely ignored by the compiler just as comments are removed from your program.

& is the bitwise AND operator. It compares two values bit by bit. If both bits in a given position are 1, the result will have a 1 in that position. Otherwise, the result will be a 0. So let's look at two 4-bit numbers and see what result & produces:
  1100 (0xc)
& 1010 (0xa)
= 1000 (0x8
